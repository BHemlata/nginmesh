# Copyright 2017 Istio Authors
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

##################################################################################################
# Details service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: details
  labels:
    app: details
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: details
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: details-v1
spec:
  replicas: 1
  template:
    metadata:
      annotations:
      labels:
        app: details
        version: v1
    spec:
      initContainers:
      - name: init
        image: nginmesh/istio-nginx-init:0.16-beta
        imagePullPolicy: Always
        securityContext:
          capabilities:
            add: [ NET_ADMIN ]
        args:
        - -p 15001
        - -u 104
      containers:
      - image: istio/examples-bookinfo-details-v1
        imagePullPolicy: IfNotPresent
        name: details
        ports:
        - containerPort: 9080
      - name: proxy
        image: nginmesh/istio-nginx-sidecar:0.16-beta
        imagePullPolicy: Always
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        securityContext:
          runAsUser: 104
---
##################################################################################################
# Ratings service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: ratings
  labels:
    app: ratings
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: ratings
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ratings-v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ratings
        version: v1
    spec:
      initContainers:
      - name: init
        image: nginmesh/istio-nginx-init:0.16-beta
        imagePullPolicy: Always
        securityContext:
          capabilities:
            add: [ NET_ADMIN ]
        args:
        - -p 15001
        - -u 104
      containers:
      - image: istio/examples-bookinfo-ratings-v1
        imagePullPolicy: IfNotPresent
        name: ratings
        ports:
        - containerPort: 9080
        resources: {}
      - name: proxy
        image: nginmesh/istio-nginx-sidecar:0.16-beta
        imagePullPolicy: Always
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        securityContext:
          runAsUser: 104
---
##################################################################################################
# Reviews service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: reviews
  labels:
    app: reviews
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: reviews
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: reviews-v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: reviews
        version: v1
    spec:
      initContainers:
      - name: init
        image: nginmesh/istio-nginx-init:0.16-beta
        imagePullPolicy: Always
        securityContext:
          capabilities:
            add: [ NET_ADMIN ]
        args:
        - -p 15001
        - -u 104
      containers:
      - image: istio/examples-bookinfo-reviews-v1
        imagePullPolicy: IfNotPresent
        name: reviews
        ports:
        - containerPort: 9080
      - name: proxy
        image: nginmesh/istio-nginx-sidecar:0.16-beta
        imagePullPolicy: Always
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        securityContext:
          runAsUser: 104
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: reviews-v2
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: reviews
        version: v2
    spec:
      initContainers:
      - name: init
        image: nginmesh/istio-nginx-init:0.16-beta
        imagePullPolicy: Always
        securityContext:
          capabilities:
            add: [ NET_ADMIN ]
        args:
        - -p 15001
        - -u 104
      containers:
      - image: istio/examples-bookinfo-reviews-v2
        imagePullPolicy: IfNotPresent
        name: reviews
        ports:
        - containerPort: 9080
      - name: proxy
        image: nginmesh/istio-nginx-sidecar:0.16-beta
        imagePullPolicy: Always
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        securityContext:
          runAsUser: 104
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: reviews-v3
spec:
  replicas: 1
  template:
    metadata:
      annotations:
      labels:
        app: reviews
        version: v3
    spec:
      initContainers:
      - name: init
        image: nginmesh/istio-nginx-init:0.16-beta
        imagePullPolicy: Always
        securityContext:
          capabilities:
            add: [ NET_ADMIN ]
        args:
        - -p 15001
        - -u 104
      containers:
      - image: istio/examples-bookinfo-reviews-v3
        imagePullPolicy: IfNotPresent
        name: reviews
        ports:
        - containerPort: 9080
      - name: proxy
        image: nginmesh/istio-nginx-sidecar:0.16-beta
        imagePullPolicy: Always
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        securityContext:
          runAsUser: 104
---
##################################################################################################
# Productpage service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: productpage
  labels:
    app: productpage
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: productpage
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: productpage-v1
spec:
  replicas: 1
  template:
    metadata:
      annotations:
      labels:
        app: productpage
        version: v1
    spec:
      initContainers:
      - name: init
        image: nginmesh/istio-nginx-init:0.16-beta
        imagePullPolicy: Always
        securityContext:
          capabilities:
            add: [ NET_ADMIN ]
        args:
        - -p 15001
        - -u 104
      containers:
      - image: istio/examples-bookinfo-productpage-v1
        imagePullPolicy: IfNotPresent
        name: productpage
        ports:
        - containerPort: 9080
      - name: proxy
        image: nginmesh/istio-nginx-sidecar:0.16-beta
        imagePullPolicy: Always
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        securityContext:
          runAsUser: 104
---
###########################################################################
# Ingress resource (gateway)
##########################################################################
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gateway
  annotations:
    kubernetes.io/ingress.class: "istio"
spec:
  rules:
  - http:
      paths:
      - path: /productpage
        backend:
          serviceName: productpage
          servicePort: 9080
      - path: /login
        backend:
          serviceName: productpage
          servicePort: 9080
      - path: /logout
        backend:
          serviceName: productpage
          servicePort: 9080
